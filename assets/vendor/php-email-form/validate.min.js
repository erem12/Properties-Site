'use strict';
(function() {
    function h(c, d, a) { fetch(d, { method: "POST", body: a, headers: { "X-Requested-With": "XMLHttpRequest" } }).then(b => b.text()).then(b => { c.querySelector(".loading").classList.remove("d-block"); if ("OK" == b.trim()) c.querySelector(".sent-message").classList.add("d-block"), c.reset();
            else throw Error(b ? b : "Form submission failed and no error message returned from: " + d); }).catch(b => { e(c, b) }) }

    function e(c, d) {
        c.querySelector(".loading").classList.remove("d-block");
        c.querySelector(".error-message").innerHTML =
            d;
        c.querySelector(".error-message").classList.add("d-block")
    }
    document.querySelectorAll(".php-email-form").forEach(function(c) {
        c.addEventListener("submit", function(d) {
            d.preventDefault();
            let a = this,
                b = a.getAttribute("action"),
                k = a.getAttribute("data-recaptcha-site-key");
            if (b) {
                a.querySelector(".loading").classList.add("d-block");
                a.querySelector(".error-message").classList.remove("d-block");
                a.querySelector(".sent-message").classList.remove("d-block");
                var f = new FormData(a);
                k ? "undefined" !== typeof grecaptcha ?
                    grecaptcha.ready(function() { try { grecaptcha.execute(k, { action: "php_email_form_submit" }).then(g => { f.set("recaptcha-response", g);
                                h(a, b, f) }) } catch (g) { e(a, g) } }) : e(a, "The reCaptcha javascript API url is not loaded!") : h(a, b, f)
            } else e(a, "The form action property is not set!")
        })
    })
})();